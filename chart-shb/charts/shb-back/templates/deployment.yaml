apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "shb-back.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "shb-back.name" . }}
    helm.sh/chart: {{ include "shb-back.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "shb-back.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "shb-back.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: config-volume
              mountPath: {{ .Values.configPath }}
            - name: jks-volume
              mountPath: {{ .Values.configPath }}/keystores
          env:
            - name: SPRING_CONFIG_LOCATION
              value: {{ .Values.configPath }}/
            - name: postgres.host
              value: {{ .Release.Name }}-shb-postgres
            - name: keystore.path
              value: {{ .Values.configPath }}/keystores/shb.jks
            {{- range $key, $value := .Values.global.postgres }}
            - name: postgres.{{$key}}
              value: {{ $value | quote}}
            {{- end }}
            {{- range $key, $value := .Values.global.rabbitmq }}
            - name: rabbitmq.{{$key}}
              value: {{ $value | quote}}
            {{- end }}
          {{- if .Values.back.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: '/info'
              port: 8080
            initialDelaySeconds: {{ .Values.back.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.back.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.back.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.back.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.back.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.back.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: '/info'
              port: 8080
            initialDelaySeconds: {{ .Values.back.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.back.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.back.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.back.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.back.livenessProbe.successThreshold }}
           {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-shb-back
        - name: jks-volume
          configMap:
            name: shb-jks
      imagePullSecrets:
        - name: {{ .Values.global.imagepullsecrets}}
      restartPolicy: Always